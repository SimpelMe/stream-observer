#! /bin/sh
# Declare variables:
SERVERPATH="http://live.ber.c3voc.de:7999/"
ALL=false
FORCE=false
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Short manual
manual()
{
  echo "Usage: obs [-a | -f | -h]"
  echo "       opens mpv with all active voc streams"
  echo "       -a tries to open all possible streams"
  echo "       -f forces default playlist if no active server is available"
  echo "       -h shows this help"
  exit
}

# Check options
while getopts 'afh' option 2>/dev/null; do
  case $option in
    a )  ALL=true;shift;;
    f )  FORCE=true;shift;;
    h )  manual;;
    * )  echo "${YELLOW}Warning: illegal option $1${NC}"
         manual;;
  esac
done

if [[ $ALL = true ]]; then
  # This playlist has all servers
  PLAYLIST="complete-playlist.m3u8"
elif [[ $FORCE = true ]]; then
  # This playlist can be defined manually as partial copy of complete-playlist
  PLAYLIST="default-playlist.m3u8"
else
  # This playlist should have only servers found in https://streaming.media.ccc.de/streams/v2.json and will be created
  PLAYLIST="current-playlist.m3u8"

  # Read current active streams by api json
  JSON="$(curl https://streaming.media.ccc.de/streams/v2.json 2>/dev/null)"
  # JSON="$(cat example.json 2>/dev/null)"

  # Check if trimmed (all white spaces) $JSON is empty
  if [[ $(echo $JSON | tr -d "[:blank:]") = "[]" && $ALL = false ]]; then
    echo "${YELLOW}Warning: no active servers available${NC}"
    exit 1
  fi

  # Find all streaming servers in $JSON trim to server only and push into array
  # source: https://stackoverflow.com/questions/10586153/split-string-into-an-array-in-bash/13196466
  REGEX="s\d{1,3}_native_hd.webm"
  SERVER="$(echo "$JSON" | grep -oE $REGEX | tr -d "_native_hd.webm")"
  SERVER_ARRAY=(`echo $SERVER | sed 's/,/\n/g'`)

  # Create playlist
  # Playlist header
  echo "#EXTM3U" > $PLAYLIST
  echo "#EXT-X-VERSION:3" >> $PLAYLIST
  # Repeat playlist names and servers and "#EXT-X-DISCONTINUITY"
  for index in "${!SERVER_ARRAY[@]}"
  do
      echo "#EXTINF:0,${SERVER_ARRAY[index]}" >> $PLAYLIST
      echo "$SERVERPATH${SERVER_ARRAY[index]}" >> $PLAYLIST
      echo "#EXT-X-DISCONTINUITY" >> $PLAYLIST
  done
  # Set a picture as last server, so mpv will not end by accident
  echo "#EXTINF:0,end of list" >> $PLAYLIST
  echo "voctocat.png" >> $PLAYLIST
  # End of playlist
  echo "#EXT-X-ENDLIST" >> $PLAYLIST
fi

# That is really playing
mpv $PLAYLIST \
  --fs \
  --msg-level=ytdl_hook=no \
  --no-input-default-bindings \
  --config-dir=. \
  --load-scripts=no \
  --scripts=select-audio.lua:select-venue.lua:reload.lua \
  --keep-open=always \
  --keep-open-pause=no \
  --idle=yes \
  --hls-bitrate=min \
  --script-opts=osc-visibility=always \
  --audio-stream-silence=yes \
  --demuxer-cache-wait=no \
  --demuxer-thread=yes \
  --osd-duration=5000 \
  --osd-msg1="switch room: 1 â€¦ 0        switch audio: q, w, e - native, translated 1, translated 2" \
  --osd-font-size=30 \
  --osd-margin-y=5 \
  --osd-margin-x=10

# Delete the playlist
if [[ $ALL = false ]]; then
  rm $PLAYLIST
fi
